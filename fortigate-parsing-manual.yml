input {
  udp {
    host => "0.0.0.0"
    port => 5044
  }
}

filter {
  # Extração do PRI e do resto da mensagem syslog
  grok {
    match => { "message" => "<%{NUMBER:pri}>%{GREEDYDATA:syslog_message}" }
  }

  # Converte o campo pri para inteiro
  mutate {
    convert => { "pri" => "integer" }
  }

  # Calcula o facility a partir do PRI (facility = PRI / 8)
  ruby {
    code => '
      if event.get("pri")
        facility = event.get("pri").to_i / 8
        event.set("[syslog][facility]", facility)
      else
        event.set("[syslog][facility]", "desconhecido")
        event.tag("desconhecido_facility")
      end
    '
  }

  # Tratamento para logs com facility desconhecido
  if [syslog][facility] == "desconhecido" {
    mutate {
      add_tag => [ "processing_desconhecido_facility" ]
    }
  }
}

output {
  if [syslog][facility] == 4 {
    elasticsearch {
      index => "fortigate-seguranca-logs-%{+YYYY.MM.dd}"
      hosts => "${ELASTIC_HOSTS}"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "certs/ca/ca.crt"
    }
  }else if [syslog][facility] == 5 {
    elasticsearch {
      index => "fortigate-trafego-logs-%{+YYYY.MM.dd}"
      hosts => "${ELASTIC_HOSTS}"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "certs/ca/ca.crt"
    }
  }else if [syslog][facility] == 16 {
    elasticsearch {
      index => "fortigate-sistema-logs-%{+YYYY.MM.dd}"
      hosts => "${ELASTIC_HOSTS}"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "certs/ca/ca.crt"
    }else {
    file {
      path => "/usr/share/logstash/logs/desconhecido_facility_logs.log"
    
    }
  }
}
}