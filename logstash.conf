input {
  file {
    #https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html
    #default is TAIL which assumes more data will come into the file.
    #change to mode => "read" if the file is a compelte file.  by default, the file will be removed once reading is complete -- backup your files if you need them.
    mode => "tail"
    path => "/usr/share/logstash/ingest_data/*" 
  }

  beats{
        port => 5044
    }
    
    udp {
    host => "0.0.0.0"
    port => 5044
  }
}

filter {
    mutate {
        add_field => ["[event][created]", "%{@timestamp}"] # event.created: when the event is created by logstash
    }
    grok {
        match => ["[event][original]", "%{SYSLOG5424PRI}%{GREEDYDATA:[@metadata][message]}"]
        #overwrite => ["message"]
        tag_on_failure => ["fortinet_grok_failure"]
    }
    if "fortinet_grok_failure" not in [tags] {
        kv {
            source => "[@metadata][message]"
            value_split => "="
            field_split => " "
            whitespace => strict
            target => "fct"
        }
        # forti* without tz: fortiweb, fortimail, forticlient, fortigate 6.0, and any log comming from fortianalyzer
#        if ![tz] or "fortianalyzer" in [tags] {
        if ![fct][tz] {
            mutate{
                replace => {"[fct][tz]" => "-0500" }
                add_tag => [ "setting_default_timezone" ]
            }
        }
        #tz="-0500" needs to be converted to tz="-05:00" for ruby on common_ecs pipeline
        mutate  {
                replace => {"[@metadata][timestamp]" => "%{[fct][date]} %{[fct][time]} %{[fct][tz]}"}
            }
        # date=2022-08-23 time=16:19:48 # original log
        # 2022-08-23 16:19:48 -0500 #"%{date} %{time} %{tz}"
        # yyyy-MM-dd HH:mm:ss Z
        date {
            match => ["[@metadata][timestamp]", "yyyy-MM-dd HH:mm:ss Z" ]
            target => "@timestamp"
            #remove_field => [ "date","time" ]
        }
    }
}

output {
  elasticsearch {
    index => "logstash-%{+YYYY.MM.dd}"
    hosts=> "${ELASTIC_HOSTS}"
    user=> "${ELASTIC_USER}"
    password=> "${ELASTIC_PASSWORD}"
    cacert=> "certs/ca/ca.crt"
  }
}
